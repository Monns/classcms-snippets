{
	"多项文本框(tags)": {
		"prefix": "ccc_tags",
		"description": "当列数为1时,存储格式为: 第一项;第二项;第三项。当列数多余1时,存储格式为:第一项列1|第一项列2;第二项列1|第二项列2",
		"scope": "html",
		"body": [
			"{\\$tags=explode(;,\\$duoxiang)}",
			"{loop \\$tags as \\$tag}",
			"    {if \\$tag}{\\$tag}<br>{/if}",
			"{/loop}",
			"",
			"",
			"{\\$tags=explode(;,\\$duoxiang)}",
			"{loop \\$tags as \\$tag}",
			"    {\\$columns=explode(\\|,\\$tag)}",
			"    第一项:{\\$columns.0}",
			"    第二项:{\\$columns.1}",
			"    循环输出:",
			"    {loop \\$columns as \\$column}",
			"        {\\$column}/",
			"    {/loop}<br>",
			"{/loop}"
		]
	},
	"搜索文章": {
		"prefix": "ccc_search",
		"description": "1、后台模型中增加模型(模型名为\"搜索\",标识为\"search\",栏目页面增加\"栏目页\")  2、增加模型后,增加搜索栏目(栏目名为\"搜索\",模型为新增的\"搜索\"模型)  3、搜索表单代码(增加到网站显示搜索框的位置):",
		"scope": "html",
		"body": [
			"<form method=\"get\" action=\"{\\$.搜索栏目的id.link}\">",
			"    <input type=\"text\" name=\"keyword\" value=\"\"><input type=\"submit\" value=\"搜索\">",
			"</form>",
			"{if isset(\\$_GET['keyword']) && !empty(\\$_GET['keyword'])}",
			"    搜索词:{htmlspecialchars(\\$_GET['keyword'])}<br>",
			"",
			"    {\\$articlelist.modulehash=article}{//搜索article文章模型}",
			"    {\\$articlelist.page=page}{//开启分页}",
			"    {\\$articlelist.pagesize=10}{//每页显示10条}",
			"",
			"    <?php",
			"    //只搜索标题:",
			"    \\$articlelist['where']['title%']=htmlspecialchars(\\$_GET['keyword']);",
			"    //同时搜索标题和内容字段",
			"    //\\$articlelist['where']['1;']=array('title%'=>htmlspecialchars(\\$_GET['keyword']),'content%'=>htmlspecialchars(\\$_GET['keyword']));",
			"    ?>",
			"    {\\$articles=a(\\$articlelist)}",
			"    {loop \\$articles as \\$article}",
			"        <a href=\"{\\$article.link}\">{\\$article.title}</a><br>",
			"    {/loop}",
			"{/if}"
		]
	},
	"文章页标题关键词描述": {
		"prefix": "ccc_tkd_article",
		"description": "文章页标题关键词描述：如不确定是否存在某个字段,建议先用isset判断",
		"scope": "html",
		"body": [
			"<title>{if isset(\\$title)}{\\$title}{/if}</title>{br}",
			"{if isset(\\$keywords)}<meta name=\"keywords\" content=\"{\\$keywords}\">{br}{/if}",
			"{if isset(\\$description)}<meta name=\"description\" content=\"{\\$description}\">{br}{/if}"
		]
	},
	"栏目页标题关键词描述": {
		"prefix": "ccc_tkd_channel",
		"description": "栏目页标题关键词描述：如不确定是否存在某个字段,建议先用isset判断",
		"scope": "html",
		"body": [
			"<title>{if isset(\\$.title)}{\\$title}{/if}</title>{br}",
			"{if isset(\\$.keywords)}<meta name=\"keywords\" content=\"{\\$.keywords}\">{br}{/if}",
			"{if isset(\\$.description)}<meta name=\"description\" content=\"{\\$.description}\">{br}{/if}"
		]
	},
	"文章访问量": {
		"prefix": "ccc_view_count",
		"description": "如需实现文章访问量的功能,可以在文章模型中增加访问量字段,如:viewcount,类型为数字,并重置所有文章的默认值为0;",
		"scope": "html",
		"body": [
			"文章页代码:",
			"访问量:{\\$viewcount}",
			"访问量+1代码:",
			"<?php",
			"    C('cms:article:edit',array('cid'=>\\$cid,'id'=>\\$id,'viewcount'=>\\$viewcount+1));",
			"?>"
		]
	},
	"u函数用法": {
		"prefix": "ccc_u",
		"description": "U函数具体参数: U($channel,\\$routehash='',\\$article=array(),\\$args=array(),\\$fullurl=false) \\$channel:栏目id \\$routehash:页面标识 \\$article:文章数组,如array('id'=>1,'title'=>'classcms'),会自动替换掉页面网址(如/channel/(\\$id)/(\\$title).html)中的文章参数 \\$args:自定义参数数组,如array('page'=>1),会自动替换掉页面网址(如/index_(page).html)中的自定义参数 \\$fullurl:为true时返回完整的网址(http://+域名+路径)",
		"scope": "html",
		"body": [
			"{U(2,otherpage)}{//获取id为2的栏目的otherpage标识的页面网址}"
		]
	},
	"串联方法调用": {
		"prefix": "ccc_app_method_more",
		"description": "串联方法调用示例：输出当前访客ip字符串的前3个字符",
		"scope": "html",
		"body": [
			"{cms:common:ip()|cms:common:text(3)}"
		]
	},
	"串联函数": {
		"prefix": "ccc_function",
		"description": "串联使用中,使用|分隔,this代表了上一个函数的执行结果,如不附带this,当前执行函数的第一个参数为上一个函数的执行结果  {str_replace(world,classcms,hello world)|str_replace(hello,666,this)|intval()} 输出666  执行步骤1:hello world中world被替换为classcms,结果为:hello classcms  执行步骤2:将上一步中的结果hello classcms中的hello替换为666,结果为 666 classcms  执行步骤3:将上一步中的结果666 classcms使用intval函数强制转换为数字,结果为666",
		"scope": "html",
		"body": [
			"{\\$a=str_replace(world,classcms,hello world)|str_replace(hello,hi,this)} "
		]
	},

    "使用php语法": {
        "scope": "html",
        "prefix": "ccc_php",
        "body": ["<?php", "$1", "?>"],
        "description": "使用php语法"
    },
    "当前模板目录": {
        "scope": "html",
        "prefix": "ccc_temp",
        "body": ["{template}"],
        "description": "模板中需要引用图片,文件等资源需要调用当前应用下的模板目录路径,可以使用template语法输出目录名."
    },
    "引用独立模板": {
        "scope": "html",
        "prefix": "ccc_file",
        "body": ["{file $1}"],
        "description": "可以将共用的代码独立放到一个文件中,在需要调用的地方使用file语法引入."
    },
    "首页变量": {
        "scope": "html",
        "prefix": "ccc_0",
        "body": ["{\\$.0.$1}"],
        "description": "调用首页的变量,例：{\\$.0.title}"
    },
    "指定栏目变量": {
        "scope": "html",
        "prefix": "ccc_1",
        "body": ["{\\$.$1.$2}"],
        "description": "调用指定栏目的变量,例：{\\$.66618102.title}"
    },
    "当前栏目变量": {
        "scope": "html",
        "prefix": "ccc_2",
        "body": ["{\\$.$1}"],
        "description": "调用当前栏目变量,例：{\\$.title}"
    },
    "当前栏目字段": {
        "scope": "html",
        "prefix": "ccc_3",
        "body": ["{\\$$1}"],
        "description": "调用当前栏目字段,例：{\\$title}"
    },
    "if判断": {
        "scope": "html",
        "prefix": "ccc_if",
        "body": ["{if $1}", "$2", "{/if}"],
        "description": "if语法可以判断变量,函数返回值等,具体语法可以参考php if语法,常用比较运算符:== 等于,!= 不等于,<> 不等于,> 大于,< 小于,>= 大于或等于,<= 小于或等于"
    },
    "if else 判断": {
        "scope": "html",
        "prefix": "ccc_ifelse",
        "body": ["{if $1}", "$2", "{else}", "$3", "{/if}"],
        "description": "if语法可以判断变量,函数返回值等,具体语法可以参考php if语法,常用比较运算符:== 等于,!= 不等于,<> 不等于,> 大于,< 小于,>= 大于或等于,<= 小于或等于"
    },
    "if elseif 判断": {
        "scope": "html",
        "prefix": "ccc_ifelseif",
        "body": ["{if $1}", "$2", "{elseif $3}", "$4", "{else}", "$5", "{/if}"],
        "description": "if语法可以判断变量,函数返回值等,具体语法可以参考php if语法,常用比较运算符:== 等于,!= 不等于,<> 不等于,> 大于,< 小于,>= 大于或等于,<= 小于或等于"
    },
    "loop 循环": {
        "scope": "html",
        "prefix": "ccc_loop",
        "body": ["{br}{loop $1 as \\$index=>\\$item}", "<li><a href=\"{\\$item.link}\">{\\$item.title}</a></li>{br}{/loop}"],
        "description": "loop语法可以输出数组列表,常用在文章列表,栏目列表的输出."
    },
    "栏目导航列表": {
        "scope": "html",
        "prefix": "ccc_nav",
        "body": ["{loop nav($1) as \\$nav}", "<li class=\"{if \\$nav.active}active{/if}\"><a href=\"{\\$nav.link}\">{\\$nav.channelname}</a></li>{br}{/loop}"],
        "description": "栏目导航：使用nav函数获取栏目列表, nav(2,8) 获取id为2的栏目下属列表,id为0则获取顶级栏目,并限定显示数量为8"
    },
    "父栏目信息": {
        "scope": "html",
        "prefix": "ccc_channelparent",
        "body": ["{\\$parent=cms:channel:get(\\$.fid)}", "父栏目名:{\\$parent.channelname} 父栏目网址:{\\$parent.link}"],
        "description": "父栏目信息：{\\$.fid} 为上级栏目id,根据上级栏目id可以获取上级栏目信息"
    },
    "所有父栏目": {
        "scope": "html",
        "prefix": "ccc_channelparents",
        "body": ["{\\$parents=cms:channel:parents(\\$.id)}", "{loop \\$parents as \\$parent}", "{\\$parent.link}/{\\$parent.channelname}<br>", "{/loop}"],
        "description": "所有父栏目信息：获取当前栏目所有父栏目列表数组"
    },
    "顶级栏目": {
        "scope": "html",
        "prefix": "ccc_channeltop",
        "body": ["{\\$top=cms:channel:top(\\$.id)}", "顶级栏目名:{\\$top.channelname} 顶级栏目网址:{\\$top.link}"],
        "description": "顶级栏目信息：获取当前栏目的顶级栏目,如不存在顶级栏目则返回false"
    },
    "面包屑导航": {
        "scope": "html",
        "prefix": "ccc_bread",
        "body": ["{loop bread() as \\$item}", "<a href=\"{\\$item.link}\">{\\$item.channelname}</a>{br}{/loop}"],
        "description": "获取栏目面包屑导航."
    },
    "文章列表": {
        "scope": "html",
        "prefix": "ccc_list",
        "body": ["{br}{loop a('cid',66618104,'all',1,\"pagesize\",8,\"where.enable=\",1) as \\$item}", "<li><a href=\"{\\$item.link}\">{\\$item.title}</a></li>{br}{/loop}"],
        "description": "调用指定栏目的文章，是否调用子栏目，是否启用"
    },
    "文章分页": {
		"prefix": "ccc_pages",
		"description": "文章分页",
		"scope": "html",
		"body": [
			"{\\$arts.page=page}",
			"{\\$arts.all=1}",
			"{\\$arts.pagesize=9}",
			"{loop a(\\$arts) as \\$item}{br}",
			"<a href=\"{\\$item.link}\" class=\"{page.class}\">{\\$item.title}</a>{br}{/loop}"
		]
	},
    "页码输出": {
        "scope": "html",
        "prefix": "ccc_pagelist",
        "body": ["{loop pagelist() as \\$item}", "<a href=\"{\\$item.link}\" class=\"{$page.class}\">{\\$item.title}</a>{br}{/loop}"],
        "description": "页码输出：开启分页之后,可以通过pagelist函数获取分页页面数组"
    },
    "分页信息": {
        "scope": "html",
        "prefix": "ccc_pageinfo",
        "body": ["{\\$pageinfo=pageinfo()}", "单页显示数量:{\\$pageinfo.pagesize} ", "当前页面:{\\$pageinfo.page} ", "文章数量:{\\$pageinfo.article} ", "首页地址:{\\$pageinfo.channelurl} ", "当前页面网址:网址{\\$pageinfo.now.link}", "首页地址:{\\$pageinfo.first.link}", "末页地址:{\\$pageinfo.last.link}", "上一页地址:{\\$pageinfo.prev.link}", "下一页地址:{\\$pageinfo.next.link}", "注意:上一页下一页有可能不存在,需要先使用isset判断"],
        "description": "开启分页之后,可以通过pageinfo函数获取分页信息(如:页面总数,首页末页地址等,方便自定义分页).注意:只有使用pagelist函数后,pageinfo才能获取分页信息"
    },
    "日期格式化": {
        "scope": "html",
        "prefix": "ccc_date",
        "body": ["{date(Y-m-d H:i:s,$1)}"],
        "description": "日期格式化"
    },
    "文本截断": {
        "scope": "html",
        "prefix": "ccc_text",
        "body": ["{text(\\$item.title,20,...)}"],
        "description": "文本截断：只显示文章标题的前20个字符"
    },
    "多图输出": {
        "scope": "html",
        "prefix": "ccc_images",
        "body": ["{\\$pics=explode(;,\\$pics)|array_filter()}", "{loop \\$pics as \\$pic}", "<li><img src=\"{\\$pic}\" /></li>{br}{/loop}"],
        "description": "多图输出"
    },
    "上一篇下一篇": {
        "prefix": "ccc_prevnext",
        "body": ["{\\$prevquery.cid=\\$cid}", "{\\$prevquery.order=id asc}", "<?php", "\\$prevquery['where']['id>']=\\$id;", "?>", "{\\$prev=cms:article:getOne(\\$prevquery)}", "{if \\$prev}", "<a href=\"{\\$prev.link}\">下一篇：{\\$prev.title}</a>", "{else}", "<a>下一篇：不存在</a>", "{/if}", "{\\$nextquery.cid=\\$cid}", "{\\$nextquery.order=id desc}", "<?php", "\\$nextquery['where']['id<']=\\$id;", "?>", "{\\$next=cms:article:getOne(\\$nextquery)}", "{if \\$next}", "<a href=\"{\\$next.link}\">下一篇：{\\$next.title}</a>", "{else}", "<a>下一篇：不存在</a>", "{/if}"],
        "description": "上一篇下一篇：此方法只能应用于按照id排序的方式获取上下篇的文章"
    }
}
